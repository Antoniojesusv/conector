# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

    mysql.user: '%env(MYSQL_USER)%'
    mysql.password: '%env(MYSQL_PASSWORD)%'
    mysql.address: '%env(MYSQL_ADDRESS)%'
    mysql.database: '%env(MYSQL_DATABASE)%'
    mysql.exposed.port: '%env(MYSQL_EXPOSED_PORT)%'
    mysql.dsn: '%env(MYSQL_DSN)%'

    sql.user: '%env(SQL_SERVER_USER)%'
    sql.password: '%env(SA_PASSWORD)%'
    sql.address: '%env(SQL_SERVER_ADDRESS)%'
    sql.database: '%env(SQL_SERVER_DATABASE)%'
    sql.exposed.port: '%env(SQL_SERVER_EXPOSED_PORT)%'
    sql.dsn: '%env(SQL_DSN)%'
    sql.authentication.method: '%env(SQL_SERVER_AUTHENTICATION_METHOD)%'

    sql.server: '%env(SERVER_SQL)%'
    sql.microsoft.dsn: '%env(SQL_MICROSOFT_USER_DSN)%'

    shop.name: '%env(SHOP_NAME)%'
    shop.rate: '%env(SHOP_RATE)%'
    server.photos.path: '%env(SERVER_PHOTOS_PATH)%'

    workdir: "%kernel.project_dir%"
    env.file: "%kernel.project_dir%/.env"
    images.log.file: "%kernel.project_dir%/images-log.json"
    images.temporary.folder: "%kernel.project_dir%/public/temporaryImages"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/**/Entities/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Model\Database\DatabaseService:
        arguments:
           $sqlPdoFactory: '@App\DbConnectors\Factories\SqlServerPdoFactory'
           $mysqlPdoFactory: '@App\DbConnectors\Factories\MysqlPdoFactory'
           $nmConnectionRepository: '@App\Repository\NmConnectionRepository'
           $uWconnectionRepository: '@App\Repository\UwConnectionRepository'
           $nmConnectionFactory: '@App\Model\Database\Factories\NmConnectionFactory'
           $uWConnectionFactory: '@App\Model\Database\Factories\UwConnectionFactory'
    
    App\Model\Synchronisation\SynchronisationService:
        arguments:
           $articleRepository: '@App\Repository\ArticleRepository'
    
    App\Repository\NmConnectionRepository:
        arguments:
           $sqlPdoFactory: '@App\DbConnectors\Factories\SqlServerPdoFactory'
           $mysqlPdoFactory: '@App\DbConnectors\Factories\MysqlPdoFactory'
           $nmConnectionFactory: '@App\Model\Database\Factories\NmConnectionFactory'

    App\Repository\UwConnectionRepository:
        arguments:
           $sqlPdoFactory: '@App\DbConnectors\Factories\SqlServerPdoFactory'
           $uWConnectionFactory: '@App\Model\Database\Factories\UwConnectionFactory'

    App\Repository\ArticleRepository:
        arguments:
           $sqlPdoFactory: '@App\DbConnectors\Factories\SqlServerPdoFactory'
